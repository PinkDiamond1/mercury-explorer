import { createAsyncThunk, createSlice, PayloadAction } from "@reduxjs/toolkit";

export interface DataValue {
    value: Number;
    status: 'pending'
}

const initialState: DataValue = {
    value: 0,
    status: 'pending'
}


//Example of Async thunk below for fetching data
// Redux Counter example:

// export const incrementAsync = createAsyncThunk(
//     'counter/fetchCount',
//     async (amount: number) => {
//       const response = await fetchCount(amount); // fetchCount is a promise
//       // The value we return becomes the `fulfilled` action payload
//       return response.data;
//     }
//   );

export const dataSlice = createSlice({
    name: 'data',
    initialState,
    reducers: {
        //For mutating state
    },
    //Actions generated by createAsyncThunk to stored here
    extraReducers: (builder)=> {
        
        //.asyncFunction
    }
})

//export const { #All Actions Here } = dataSlice.actions

// Add selectors here for useSelector function in React app

// Add Thunks here

export default dataSlice.reducer